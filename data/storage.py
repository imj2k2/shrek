import os\nimport json\nimport redis\nfrom typing import Dict, Any\n\nclass Storage:\n    def __init__(self, redis_url=None, fallback_file='storage.json'):\n        self.redis_url = redis_url or os.getenv('REDIS_URL', None)\n        self.fallback_file = fallback_file\n        self.redis = redis.Redis.from_url(self.redis_url) if self.redis_url else None\n    def save(self, key: str, value: Dict[str, Any]):\n        if self.redis:\n            self.redis.set(key, json.dumps(value))\n        else:\n            data = self._load_file()\n            data[key] = value\n            with open(self.fallback_file, 'w') as f:\n                json.dump(data, f)\n    def load(self, key: str):\n        if self.redis:\n            val = self.redis.get(key)\n            return json.loads(val) if val else None\n        else:\n            data = self._load_file()\n            return data.get(key, None)\n    def _load_file(self):\n        if os.path.exists(self.fallback_file):\n            with open(self.fallback_file, 'r') as f:\n                return json.load(f)\n        return {}\n
